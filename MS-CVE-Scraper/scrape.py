# Scrape for all cves into csv from Microsoft security API
#

import csv, requests, re, json, time
import os.path
from os import path #to check if file exists


print("CVE Scraper")
print("-nullsc \n\n")

#url = 'https://portal.msrc.microsoft.com/en-us/security-guidance/acknowledgments'
url = 'https://portal.msrc.microsoft.com/api/security-guidance/en-us/acknowledgments/year/2020' #get all CVES
cveUrl = 'https://portal.msrc.microsoft.com/api/security-guidance/en-US/CVE/' #append CVE to url

filename = 'output.csv' #path name of CSV


def writeCSV(one, two, three, four, five, six): #name, cve, Author, date, desc, CVSS rating
    head = path.exists(filename) #check if we need to write headers
    
    with open(filename, 'a', newline='') as f: #append and remove new lines
        colNames = ['Vuln Name', 'CVEID', 'Acknowledgement', 'Date Published', 'Description', 'CVSS']
        writer = csv.DictWriter(f, fieldnames=colNames) #use dictionary format

        if (not head): writer.writeheader() #don't write the header is the file exits already
        writer.writerow({'Vuln Name' : one, 'CVEID' : two, 'Acknowledgement' : three, 'Date Published' : four, 'Description' : five, 'CVSS' : six})

    f.close()


s = requests.Session() #start the session
data = s.get(url) #http get request to download data
  
data = data.text #get the raw text
#print(data)
cves = re.findall('"cveNumber":"(.*?)",', data) #get all CVEs

for cve in cves:
    if (cve.startswith('CVE')): #
        
        try:
            cveInfo = s.get(cveUrl + cve) #get the individual cves via http get
        except:
            pass
        
        print("requesting: " + cveUrl + cve)
        
        JSN = json.loads(cveInfo.text) #convert to JSON format

        try:
            cveTitle = JSN["cveTitle"] #name
            acknowledgments = JSN["acknowledgments"][0] #(author)
            publishedDate = JSN["publishedDate"] # date
            description = JSN["description"][3:100] # description limit to first line (100 chars) and remove <p>
            baseScore = JSN["affectedProducts"][0]["baseScore"] #vuln score (not all seem to have this)
        except:
            pass
        
        print(cveTitle) #name
        print(cve) #cve ID
        print(acknowledgments) #(author)
        print(publishedDate) # date
        print(description) # description limit to first line
        print(baseScore) #vuln score
        print('\n') #new line
        
        writeCSV(cveTitle, cve, acknowledgments, publishedDate, description, baseScore)
        #time.sleep(1) #



